{%- if cookiecutter.test_matrix_configurator|lower == "yes" -%}
; this is just a bootstrap tox configuration, run tox or ./ci/bootstrap.py to have the full tox.ini

[tox]
envlist = bootstrap

[testenv:bootstrap]
basepython =
    python
deps =
    jinja2
    matrix
skip_install = true
commands =
    python ci/bootstrap.py
passenv =
    *
{%- else -%}
; a generative tox configuration, see: https://testrun.org/tox/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    check,
    {py26,py27,py33,py34,py35,pypy}-{cover,nocov},
    report,
    docs

[testenv]
basepython =
    pypy: {env:TOXPYTHON:pypy}
    py26: {env:TOXPYTHON:python2.6}
    {py27,docs,spell}: {env:TOXPYTHON:python2.7}
    py33: {env:TOXPYTHON:python3.3}
    py34: {env:TOXPYTHON:python3.4}
    py35: {env:TOXPYTHON:python3.5}
    {clean,check,report,extension-coveralls,coveralls,codecov}: python3.4
    bootstrap: python
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
deps =
{%- if cookiecutter.test_runner|lower == "pytest" %}
    pytest
    pytest-travis-fold
    cover: pytest-cov
{%- else %}
    nose
    cover: coverage
{%- endif %}
commands =
{%- if cookiecutter.c_extension_support|lower == "yes" %}
    cover: python setup.py clean --all build_ext --force --inplace
{%- endif %}
{%- if cookiecutter.test_runner|lower == "pytest" %}
    nocov: {posargs:py.test -vv --ignore=src}
    cover: {posargs:py.test --cov --cov-report=term-missing -vv}
{%- else %}
    nocov: {posargs:nosetests -v tests}
    cover: {posargs:nosetests --with-coverage --cover-package={{ cookiecutter.package_name|replace('-', '_') }}}
{%- endif %}
usedevelop = true

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
commands =
    python ci/bootstrap.py
passenv =
    *

[testenv:spell]
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -b spelling docs dist/docs
skip_install = true
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:check]
basepython = python3.4
deps =
    docutils
    check-manifest
    flake8
    readme
    pygments
skip_install = true
usedevelop = false
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 src tests

[testenv:coveralls]
deps =
    coveralls
skip_install = true
usedevelop = false
commands =
    coverage combine
    coverage report
    coveralls{%- if cookiecutter.c_extension_support|lower == "yes" %} --merge=extension-coveralls.json{% endif %} []

[testenv:codecov]
deps =
    codecov
skip_install = true
usedevelop = false
commands =
    coverage combine
    coverage report
    coverage xml --ignore-errors
    codecov []

{% if cookiecutter.c_extension_support|lower == "yes" %}
[testenv:extension-coveralls]
deps =
    cpp-coveralls
skip_install = true
usedevelop = false
commands =
    coveralls --build-root=. --include=src --dump=extension-coveralls.json []
{% endif %}
[testenv:report]
basepython = python3.4
deps = coverage
skip_install = true
usedevelop = false
commands =
    coverage combine
    coverage report

[testenv:clean]
commands = coverage erase
skip_install = true
usedevelop = false
deps = coverage

[testenv:py26-nocov]
usedevelop = false

[testenv:py27-nocov]
usedevelop = false

[testenv:py33-nocov]
usedevelop = false

[testenv:py34-nocov]
usedevelop = false

[testenv:py35-nocov]
usedevelop = false

[testenv:pypy-nocov]
usedevelop = false
{% endif %}
